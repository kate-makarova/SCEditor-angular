<<<<<<< HEAD
{"version":3,"file":"sceditor-angular.mjs","sources":["../../../projects/sceditor-angular/src/lib/script.service.ts","../../../projects/sceditor-angular/src/lib/sceditor/sceditor.component.ts","../../../projects/sceditor-angular/src/lib/sceditor/sceditor.component.html","../../../projects/sceditor-angular/src/lib/sceditor.module.ts","../../../projects/sceditor-angular/src/public-api.ts","../../../projects/sceditor-angular/src/sceditor-angular.ts"],"sourcesContent":["interface Scripts {\r\n    name: string;\r\n    src: string;\r\n}\r\n\r\nexport class ScriptService {\r\n\r\n    private scripts: any = {};\r\n\r\n    constructor(scriptStore: Scripts[]) {\r\n        scriptStore.forEach((script: any) => {\r\n            this.scripts[script.name] = {\r\n                loaded: false,\r\n                src: script.src\r\n            };\r\n        });\r\n    }\r\n\r\n    async load(...scripts: string[]) {\r\n        const promises: any[] = [];\r\n        for (const script of scripts) {\r\n            await this.loadScript(script);\r\n        }\r\n        return Promise.all(promises);\r\n    }\r\n\r\n    loadScript(name: string) {\r\n        return new Promise((resolve, reject) => {\r\n            // resolve if already loaded\r\n            if (this.scripts[name].loaded) {\r\n                resolve({ script: name, loaded: true, status: 'Already Loaded' });\r\n            } else {\r\n                // load script\r\n                const script = document.createElement('script');\r\n                script.type = 'text/javascript';\r\n                script.src = this.scripts[name].src;\r\n                script.onload = () => {\r\n                    this.scripts[name].loaded = true;\r\n                    console.log(`${name} Loaded.`);\r\n                    resolve({ script: name, loaded: true, status: 'Loaded' });\r\n                };\r\n                script.onerror = (error: any) => resolve({ script: name, loaded: false, status: 'Loaded' });\r\n                document.getElementsByTagName('head')[0].appendChild(script);\r\n            }\r\n        });\r\n    }\r\n}","import {Component, Input, OnInit} from '@angular/core';\nimport {ScriptService} from \"../script.service\";\nimport {ReactiveFormsModule} from \"@angular/forms\";\n\n@Component({\n  selector: 'app-sceditor',\n  imports: [\n    ReactiveFormsModule\n  ],\n  templateUrl: './sceditor.component.html',\n  styleUrl: './sceditor.component.css'\n})\nexport class SceditorComponent implements OnInit {\n  @Input('id') id: string  = ''\n  @Input('format') format: string = 'xhtml'\n  private scripts: any[] = []\n  private scriptService: ScriptService;\n\n  constructor() {\n    let format_script = 'https://cdn.jsdelivr.net/npm/sceditor@3/minified/formats/xhtml.min.js'\n    if (this.format == 'bbcode') {\n      format_script = 'https://cdn.jsdelivr.net/npm/sceditor@3/minified/formats/bbcode.min.js'\n    }\n    this.scripts = [\n      { name: 'main', src: 'https://cdn.jsdelivr.net/npm/sceditor@3/minified/sceditor.min.js' },\n      { name: 'format', src: format_script }\n    ];\n    this.scriptService = new ScriptService(this.scripts);\n  }\n\n  ngOnInit() {\n    this.scriptService.load('main', 'format').then(() => {\n      const textarea = document.getElementById(this.id);\n      // @ts-ignore\n      sceditor.create(textarea, {\n        format: this.format,\n        style: 'https://cdn.jsdelivr.net/npm/sceditor@3/minified/themes/content/default.min.css',\n        height: 300,\n      });\n\n    })\n  }\n}\n","<textarea [id]=\"id\"></textarea>","import {NgModule} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {SceditorComponent} from \"./sceditor/sceditor.component\";\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    SceditorComponent\n  ],\n  exports: [\n    SceditorComponent\n  ]\n})\nexport class SCEditorModule {\n  public static getValue(id: string): string {\n    const textarea = document.getElementById(id);\n    // @ts-ignore\n    return sceditor.instance(textarea).val();\n  }\n}\n","/*\n * Public API Surface of sceditor-angular\n */\n\nexport * from './lib/script.service';\nexport * from './lib/sceditor.module';\nexport * from './lib/sceditor/sceditor.component';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}
=======
{"version":3,"file":"sceditor-angular.mjs","sources":["../../../projects/sceditor-angular/src/lib/script.service.ts","../../../projects/sceditor-angular/src/lib/sceditor/sceditor.component.ts","../../../projects/sceditor-angular/src/lib/sceditor/sceditor.component.html","../../../projects/sceditor-angular/src/lib/sceditor.module.ts","../../../projects/sceditor-angular/src/public-api.ts","../../../projects/sceditor-angular/src/sceditor-angular.ts"],"sourcesContent":["interface Scripts {\r\n    name: string;\r\n    src: string;\r\n}\r\n\r\nexport class ScriptService {\r\n\r\n    private scripts: any = {};\r\n\r\n    constructor(scriptStore: Scripts[]) {\r\n        scriptStore.forEach((script: any) => {\r\n            this.scripts[script.name] = {\r\n                loaded: false,\r\n                src: script.src\r\n            };\r\n        });\r\n    }\r\n\r\n    async load(...scripts: string[]) {\r\n        const promises: any[] = [];\r\n        for (const script of scripts) {\r\n            await this.loadScript(script);\r\n        }\r\n        return Promise.all(promises);\r\n    }\r\n\r\n    loadScript(name: string) {\r\n        return new Promise((resolve, reject) => {\r\n            // resolve if already loaded\r\n            if (this.scripts[name].loaded) {\r\n                resolve({ script: name, loaded: true, status: 'Already Loaded' });\r\n            } else {\r\n                // load script\r\n                const script = document.createElement('script');\r\n                script.type = 'text/javascript';\r\n                script.src = this.scripts[name].src;\r\n                script.onload = () => {\r\n                    this.scripts[name].loaded = true;\r\n                    console.log(`${name} Loaded.`);\r\n                    resolve({ script: name, loaded: true, status: 'Loaded' });\r\n                };\r\n                script.onerror = (error: any) => resolve({ script: name, loaded: false, status: 'Loaded' });\r\n                document.getElementsByTagName('head')[0].appendChild(script);\r\n            }\r\n        });\r\n    }\r\n}","import {Component, Input, OnInit} from '@angular/core';\nimport {ScriptService} from \"../script.service\";\nimport {ReactiveFormsModule} from \"@angular/forms\";\n\n@Component({\n  selector: 'app-sceditor',\n  imports: [\n    ReactiveFormsModule\n  ],\n  templateUrl: './sceditor.component.html',\n  styleUrl: './sceditor.component.css'\n})\nexport class SceditorComponent implements OnInit {\n  @Input('id') id: string  = ''\n  @Input('format') format: string = 'xhtml'\n  @Input('toolbar') toolbar: string;\n  private scripts: any[] = []\n  private scriptService: ScriptService;\n\n  constructor() {\n    this.toolbar = 'bold,italic,underline,strike,subscript,superscript|' +\n        'left,center,right,justify|' +\n        'font,size,color|' +\n        'removeformat|' +\n        'cut,copy,paste|' +\n        'pastetext,bulletlist,orderedlist,table,code,quote|' +\n        'horizontalrule|' +\n        'image,link,unlink|' +\n        'emoticon'\n    let format_script = 'https://cdn.jsdelivr.net/npm/sceditor@3/minified/formats/xhtml.min.js'\n    if (this.format == 'bbcode') {\n      format_script = 'https://cdn.jsdelivr.net/npm/sceditor@3/minified/formats/bbcode.min.js'\n    }\n    this.scripts = [\n      { name: 'main', src: 'https://cdn.jsdelivr.net/npm/sceditor@3/minified/sceditor.min.js' },\n      { name: 'format', src: format_script }\n    ];\n    this.scriptService = new ScriptService(this.scripts);\n  }\n\n  ngOnInit() {\n    this.scriptService.load('main', 'format').then(() => {\n      const textarea = document.getElementById(this.id);\n      // @ts-ignore\n      sceditor.create(textarea, {\n        format: this.format,\n        toolbar: this.toolbar,\n        style: 'https://cdn.jsdelivr.net/npm/sceditor@3/minified/themes/content/default.min.css',\n        height: 300,\n      });\n\n    })\n  }\n}\n","<textarea [id]=\"id\"></textarea>","import {NgModule} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {SceditorComponent} from \"./sceditor/sceditor.component\";\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    SceditorComponent\n  ],\n  exports: [\n    SceditorComponent\n  ]\n})\nexport class SCEditorModule {\n  public static getValue(id: string): string {\n    const textarea = document.getElementById(id);\n    // @ts-ignore\n    return sceditor.instance(textarea).val();\n  }\n}\n","/*\n * Public API Surface of sceditor-angular\n */\n\nexport * from './lib/script.service';\nexport * from './lib/sceditor.module';\nexport * from './lib/sceditor/sceditor.component';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}
>>>>>>> c63596f (check)
